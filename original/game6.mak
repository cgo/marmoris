ORIGIN = PWB
ORIGIN_VER = 2.1.49
PROJ = GAME6
PROJFILE = GAME6.MAK
DEBUG = 0

BSCMAKE  = bscmake
SBRPACK  = sbrpack
NMAKEBSC1  = set
NMAKEBSC2  = nmake
ASM  = ml
H2INC  = h2inc
AFLAGS_G  = /Cx /W2 /WX
AFLAGS_D  = /Zi
AFLAGS_R  = /nologo
MAPFILE_D  = NUL
MAPFILE_R  = NUL
LFLAGS_G  = /NOI /BATCH
LFLAGS_D  = /CO /FAR
LFLAGS_R  = /FAR
LINKER	= link
ILINK  = ilink
LRF  = echo > NUL
ILFLAGS  = /a /e

FILES  = game6.asm EDITOR.ASM FIEPS.ASM INTRO.ASM LOADLEVE.ASM LOADPIC.ASM\
	LOADSTEI.ASM SHOWSTEI.ASM UNPAK.ASM TESTNEXT.ASM
OBJS  = game6.obj EDITOR.obj FIEPS.obj INTRO.obj LOADLEVE.obj LOADPIC.obj\
	LOADSTEI.obj SHOWSTEI.obj UNPAK.obj TESTNEXT.obj
SBRS  = game6.sbr EDITOR.sbr FIEPS.sbr INTRO.sbr LOADLEVE.sbr LOADPIC.sbr\
	LOADSTEI.sbr SHOWSTEI.sbr UNPAK.sbr TESTNEXT.sbr

all: $(PROJ).exe

.SUFFIXES:
.SUFFIXES:
.SUFFIXES: .obj .sbr .asm

game6.obj : game6.asm LOADPIC.ASM LOADSTEI.ASM SHOWSTEI.ASM EDITOR.ASM\
	LOADLEVE.ASM INTRO.ASM FIEPS.ASM UNPAK.ASM TESTNEXT.ASM
!IF $(DEBUG)
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_D) /Fogame6.obj game6.asm
!ELSE
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_R) /Fogame6.obj game6.asm
!ENDIF

game6.sbr : game6.asm LOADPIC.ASM LOADSTEI.ASM SHOWSTEI.ASM EDITOR.ASM\
	LOADLEVE.ASM INTRO.ASM FIEPS.ASM UNPAK.ASM TESTNEXT.ASM
!IF $(DEBUG)
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_D) /FRgame6.sbr game6.asm
!ELSE
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_R) /FRgame6.sbr game6.asm
!ENDIF

EDITOR.obj : EDITOR.ASM
!IF $(DEBUG)
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_D) /FoEDITOR.obj EDITOR.ASM
!ELSE
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_R) /FoEDITOR.obj EDITOR.ASM
!ENDIF

EDITOR.sbr : EDITOR.ASM
!IF $(DEBUG)
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_D) /FREDITOR.sbr EDITOR.ASM
!ELSE
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_R) /FREDITOR.sbr EDITOR.ASM
!ENDIF

FIEPS.obj : FIEPS.ASM
!IF $(DEBUG)
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_D) /FoFIEPS.obj FIEPS.ASM
!ELSE
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_R) /FoFIEPS.obj FIEPS.ASM
!ENDIF

FIEPS.sbr : FIEPS.ASM
!IF $(DEBUG)
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_D) /FRFIEPS.sbr FIEPS.ASM
!ELSE
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_R) /FRFIEPS.sbr FIEPS.ASM
!ENDIF

INTRO.obj : INTRO.ASM
!IF $(DEBUG)
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_D) /FoINTRO.obj INTRO.ASM
!ELSE
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_R) /FoINTRO.obj INTRO.ASM
!ENDIF

INTRO.sbr : INTRO.ASM
!IF $(DEBUG)
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_D) /FRINTRO.sbr INTRO.ASM
!ELSE
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_R) /FRINTRO.sbr INTRO.ASM
!ENDIF

LOADLEVE.obj : LOADLEVE.ASM
!IF $(DEBUG)
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_D) /FoLOADLEVE.obj LOADLEVE.ASM
!ELSE
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_R) /FoLOADLEVE.obj LOADLEVE.ASM
!ENDIF

LOADLEVE.sbr : LOADLEVE.ASM
!IF $(DEBUG)
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_D) /FRLOADLEVE.sbr LOADLEVE.ASM
!ELSE
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_R) /FRLOADLEVE.sbr LOADLEVE.ASM
!ENDIF

LOADPIC.obj : LOADPIC.ASM
!IF $(DEBUG)
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_D) /FoLOADPIC.obj LOADPIC.ASM
!ELSE
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_R) /FoLOADPIC.obj LOADPIC.ASM
!ENDIF

LOADPIC.sbr : LOADPIC.ASM
!IF $(DEBUG)
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_D) /FRLOADPIC.sbr LOADPIC.ASM
!ELSE
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_R) /FRLOADPIC.sbr LOADPIC.ASM
!ENDIF

LOADSTEI.obj : LOADSTEI.ASM
!IF $(DEBUG)
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_D) /FoLOADSTEI.obj LOADSTEI.ASM
!ELSE
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_R) /FoLOADSTEI.obj LOADSTEI.ASM
!ENDIF

LOADSTEI.sbr : LOADSTEI.ASM
!IF $(DEBUG)
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_D) /FRLOADSTEI.sbr LOADSTEI.ASM
!ELSE
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_R) /FRLOADSTEI.sbr LOADSTEI.ASM
!ENDIF

SHOWSTEI.obj : SHOWSTEI.ASM
!IF $(DEBUG)
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_D) /FoSHOWSTEI.obj SHOWSTEI.ASM
!ELSE
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_R) /FoSHOWSTEI.obj SHOWSTEI.ASM
!ENDIF

SHOWSTEI.sbr : SHOWSTEI.ASM
!IF $(DEBUG)
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_D) /FRSHOWSTEI.sbr SHOWSTEI.ASM
!ELSE
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_R) /FRSHOWSTEI.sbr SHOWSTEI.ASM
!ENDIF

UNPAK.obj : UNPAK.ASM
!IF $(DEBUG)
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_D) /FoUNPAK.obj UNPAK.ASM
!ELSE
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_R) /FoUNPAK.obj UNPAK.ASM
!ENDIF

UNPAK.sbr : UNPAK.ASM
!IF $(DEBUG)
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_D) /FRUNPAK.sbr UNPAK.ASM
!ELSE
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_R) /FRUNPAK.sbr UNPAK.ASM
!ENDIF

TESTNEXT.obj : TESTNEXT.ASM
!IF $(DEBUG)
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_D) /FoTESTNEXT.obj TESTNEXT.ASM
!ELSE
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_R) /FoTESTNEXT.obj TESTNEXT.ASM
!ENDIF

TESTNEXT.sbr : TESTNEXT.ASM
!IF $(DEBUG)
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_D) /FRTESTNEXT.sbr TESTNEXT.ASM
!ELSE
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_R) /FRTESTNEXT.sbr TESTNEXT.ASM
!ENDIF


$(PROJ).bsc : $(SBRS)
	$(BSCMAKE) @<<
$(BRFLAGS) $(SBRS)
<<

$(PROJ).exe : $(OBJS)
!IF $(DEBUG)
	$(LRF) @<<$(PROJ).lrf
$(RT_OBJS: = +^
) $(OBJS: = +^
)
$@
$(MAPFILE_D)
$(LIBS: = +^
) +
$(LLIBS_G: = +^
) +
$(LLIBS_D: = +^
)
$(DEF_FILE) $(LFLAGS_G) $(LFLAGS_D);
<<
!ELSE
	$(LRF) @<<$(PROJ).lrf
$(RT_OBJS: = +^
) $(OBJS: = +^
)
$@
$(MAPFILE_R)
$(LIBS: = +^
) +
$(LLIBS_G: = +^
) +
$(LLIBS_R: = +^
)
$(DEF_FILE) $(LFLAGS_G) $(LFLAGS_R);
<<
!ENDIF
	$(LINKER) @$(PROJ).lrf


.asm.obj :
!IF $(DEBUG)
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_D) /Fo$@ $<
!ELSE
	$(ASM) /c $(AFLAGS_G) $(AFLAGS_R) /Fo$@ $<
!ENDIF

.asm.sbr :
!IF $(DEBUG)
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_D) /FR$@ $<
!ELSE
	$(ASM) /Zs $(AFLAGS_G) $(AFLAGS_R) /FR$@ $<
!ENDIF


run: $(PROJ).exe
	$(PROJ).exe $(RUNFLAGS)

debug: $(PROJ).exe
	CV $(CVFLAGS) $(PROJ).exe $(RUNFLAGS)
